openapi: 3.0.0
paths:
  /v1/users:
    get:
      operationId: 一覧検索
      summary: ''
      parameters:
        - name: offset
          required: false
          in: query
          schema:
            minimum: 0
            title: offset
            default: 0
            type: number
        - name: limit
          required: false
          in: query
          schema:
            minimum: 0
            maximum: 200
            title: limit
            default: 25
            type: number
        - name: nickname
          required: true
          in: query
          example: みなかみはちみ
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - ユーザー
  /v1/users/{nsaid}:
    get:
      operationId: 検索
      summary: ''
      parameters:
        - name: nsaid
          required: true
          in: path
          example: 91d160aa84e88da6
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserStats'
        '404':
          description: ''
      tags:
        - ユーザー
  /v1/stats/{start_time}:
    get:
      operationId: 統計取得
      summary: ''
      parameters:
        - name: start_time
          required: true
          in: path
          description: スケジュールID
          example: 1655575200
          schema:
            type: number
      responses:
        '404':
          description: ''
      tags:
        - 統計
  /v1/nickname_and_icon:
    get:
      operationId: アイコン取得
      summary: ''
      parameters:
        - name: id
          required: true
          in: query
          example:
            - 3f89c3791c43ea57
            - 8db26d4c24ee37fd
            - 7690d838ab4db5d2
            - f28328d99d9dba3c
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NicknameAndIconResponseDto'
        '403':
          description: ''
      tags:
        - ユーザー
  /v1/waves/{start_time}:
    get:
      operationId: WAVE記録取得
      summary: ''
      parameters:
        - name: start_time
          required: true
          in: path
          example: 1655575200
          schema:
            type: integer
        - name: event_type
          required: true
          in: query
          example: 0
          schema:
            type: integer
        - name: water_level
          required: true
          in: query
          example: 1
          schema:
            type: integer
      responses:
        '200':
          description: ''
      tags:
        - シフト記録
  /v1/versions:
    get:
      operationId: バージョン取得
      summary: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - バージョン
  /v1/weapons/{start_time}:
    get:
      operationId: 支給ブキ数記録取得
      summary: ''
      parameters:
        - name: start_time
          required: true
          in: path
          example: 1656201600
          schema:
            type: integer
      responses:
        '200':
          description: ''
      tags:
        - シフト記録
  /v1/salmonids/{start_time}:
    get:
      operationId: オオモノ数記録取得
      summary: ''
      parameters:
        - name: start_time
          required: true
          in: path
          example: 1656201600
          schema:
            type: integer
      responses:
        '200':
          description: ''
      tags:
        - シフト記録
  /v1/restore:
    post:
      operationId: 復元
      summary: ''
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreResults'
      responses:
        '404':
          description: ''
      tags:
        - リザルト
  /v1/system:
    get:
      operationId: サーバー情報
      summary: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - システム
  /v1/results/{salmon_id}:
    get:
      operationId: 取得
      summary: ''
      parameters:
        - name: salmon_id
          required: true
          in: path
          description: リザルトID
          schema:
            type: integer
      responses:
        '200':
          description: ''
        '404':
          description: ''
      tags:
        - リザルト
  /v1/results:
    get:
      operationId: 一括取得
      summary: ''
      parameters:
        - name: offset
          required: false
          in: query
          schema:
            minimum: 0
            title: offset
            default: 0
            type: number
        - name: limit
          required: false
          in: query
          schema:
            minimum: 0
            maximum: 200
            title: limit
            default: 25
            type: number
        - name: include_details
          required: false
          in: query
          description: 詳細データを含むかどうか
          schema:
            title: ''
            default: false
            type: boolean
        - name: start_time
          required: false
          in: query
          description: スケジュールID
          schema:
            title: ''
            type: number
        - name: nsaid
          required: false
          in: query
          description: プレイヤーID
          schema:
            title: ''
            type: string
        - name: is_clear
          required: false
          in: query
          description: クリアしたリザルトのみ
          schema:
            title: ''
            type: boolean
        - name: night_less
          required: false
          in: query
          description: 夜イベントを含まないかどうか
          schema:
            title: ''
            type: boolean
        - name: golden_ikura_num
          required: false
          in: query
          description: 最小納品金イクラ数
          schema:
            title: ''
            type: number
        - name: ikura_num
          required: false
          in: query
          description: 最小取得赤イクラ数
          schema:
            title: ''
            type: number
        - name: sort
          required: false
          in: query
          description: ソート種類
          schema:
            title: ''
            default: salmon_id
            enum:
              - golden_ikura_num
              - ikura_num
              - salmon_id
              - play_time
            type: string
        - name: order
          required: false
          in: query
          description: ソート方向
          schema:
            title: ''
            default: asc
            enum:
              - asc
              - desc
            type: string
      responses:
        '200':
          description: ''
        '404':
          description: ''
      tags:
        - リザルト
    post:
      operationId: 登録
      summary: ''
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadResults'
      responses:
        '201':
          description: ''
        '400':
          description: ''
      tags:
        - リザルト
  /v1/ranks:
    get:
      operationId: 最新の各種ランキング取得
      summary: ''
      description: シフトごとのいろんな記録を取得
      parameters: []
      responses:
        '200':
          description: ''
      tags: &ref_0
        - ランキング
  /v1/ranks/{start_time}:
    get:
      operationId: 各種ランキング取得
      summary: ''
      description: シフトごとのいろんな記録を取得
      parameters:
        - name: start_time
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: ''
      tags: *ref_0
  /v1/ranks/{start_time}/users:
    get:
      operationId: ユーザランキング取得
      summary: ''
      description: シフトでの自チームのイクラ獲得ランキング
      parameters:
        - name: nsaid
          required: true
          in: query
          description: プレイヤーID
          example: 91d160aa84e88da6
          schema:
            type: string
        - name: start_time
          required: true
          in: path
          description: スケジュールID
          example: 1654020000
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rank'
        '404':
          description: ''
      tags: *ref_0
  /v1/ranks/{start_time}/teams:
    get:
      operationId: チームランキング取得
      summary: ''
      description: シフトでのチームごとのイクラ獲得ランキング(WAVE記録は非対応)
      parameters:
        - name: start_time
          required: true
          in: path
          description: スケジュールID
          example: 1654020000
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rank'
        '404':
          description: ''
      tags: *ref_0
  /v1/schedules:
    get:
      operationId: 取得
      summary: ''
      description: スケジュールを取得します
      parameters:
        - name: offset
          required: false
          in: query
          schema:
            minimum: 0
            title: offset
            default: 0
            type: number
        - name: limit
          required: false
          in: query
          schema:
            minimum: 0
            maximum: 200
            title: limit
            default: 25
            type: number
        - name: include_futures
          required: true
          in: query
          description: 未リリースのデータを含むかどうか
          schema:
            title: ''
            default: true
            type: boolean
      responses:
        '200':
          description: ''
      tags:
        - スケジュール
    post:
      operationId: 追加
      summary: ''
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - スケジュール
  /v1/schedules/{start_time}:
    get:
      operationId: 統計取得
      summary: ''
      description: スケジュールのリザルト統計を取得します
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - スケジュール
  /v1/totals/{start_time}:
    get:
      operationId: 総合記録取得
      summary: ''
      parameters:
        - name: start_time
          required: true
          in: path
          example: 1655575200
          schema:
            type: integer
        - name: nightless
          required: true
          in: query
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
      tags:
        - シフト記録
info:
  title: Salmon Stats API Documents
  description: ''
  version: 1.0.6
  contact: {}
tags: []
servers: []
components:
  schemas:
    Result:
      type: object
      properties: {}
    StageResult:
      type: object
      properties:
        stage_id:
          type: number
          description: ステージID
        grade_point_max:
          type: number
          description: 最高評価
        shifts_worked:
          type: number
        kuma_point_total:
          type: number
        nightless:
          type: boolean
        player_results:
          $ref: '#/components/schemas/Result'
        team_results:
          $ref: '#/components/schemas/Result'
      required:
        - stage_id
        - grade_point_max
        - shifts_worked
        - kuma_point_total
        - nightless
        - player_results
        - team_results
    UserStats:
      type: object
      properties:
        nsaid:
          type: string
        nickname:
          type: string
        thumbnail_url:
          type: string
        shifts_worked:
          type: number
        golden_ikura_num:
          type: number
        ikura_num:
          type: number
        dead_count:
          type: number
        kuma_point:
          type: number
        help_count:
          type: number
        grade_id:
          type: number
        grade_point:
          type: number
        stage_results:
          type: array
          items:
            $ref: '#/components/schemas/StageResult'
        results:
          type: array
          items:
            $ref: '#/components/schemas/Result'
      required:
        - nsaid
        - nickname
        - thumbnail_url
        - shifts_worked
        - golden_ikura_num
        - ikura_num
        - dead_count
        - kuma_point
        - help_count
        - grade_id
        - grade_point
        - stage_results
        - results
    NicknameAndIcon:
      type: object
      properties:
        nickname:
          type: string
        nsa_id:
          type: string
        thumbnail_url:
          type: string
      required:
        - nickname
        - nsa_id
        - thumbnail_url
    NicknameAndIconResponseDto:
      type: object
      properties:
        nickname_and_icons:
          type: array
          items:
            $ref: '#/components/schemas/NicknameAndIcon'
      required:
        - nickname_and_icons
    JobResult:
      type: object
      properties:
        failure_wave:
          type: number
          example: 1
          nullable: true
        failure_reason:
          type: string
          enum:
            - time_limit
            - wipe_out
          example: time_limit
          nullable: true
        is_clear:
          type: boolean
          example: false
      required:
        - failure_wave
        - failure_reason
        - is_clear
    RestorePlayer:
      type: object
      properties:
        nsaid:
          type: string
        name:
          type: string
        boss_kill_counts:
          type: array
          items:
            type: string
        dead_count:
          type: number
        help_count:
          type: number
        golden_ikura_num:
          type: number
        ikura_num:
          type: number
        job_id:
          type: number
          nullable: true
        job_score:
          type: number
          nullable: true
        job_rate:
          type: number
          nullable: true
        kuma_point:
          type: number
          nullable: true
        style:
          type: string
        species:
          type: string
        grade_id:
          type: number
          nullable: true
        grade_point:
          type: number
          nullable: true
        grade_point_delta:
          type: number
          nullable: true
        special_id:
          type: number
        special_counts:
          type: array
          items:
            type: string
        weapon_list:
          type: array
          items:
            type: string
      required:
        - nsaid
        - name
        - boss_kill_counts
        - dead_count
        - help_count
        - golden_ikura_num
        - ikura_num
        - job_id
        - job_score
        - job_rate
        - kuma_point
        - style
        - species
        - grade_id
        - grade_point
        - grade_point_delta
        - special_id
        - special_counts
        - weapon_list
    RestoreSchedule:
      type: object
      properties:
        stage_id:
          type: number
        start_time:
          format: date-time
          type: string
        end_time:
          format: date-time
          type: string
        weapon_list:
          type: array
          items:
            type: string
        rare_weapon:
          type: number
          nullable: true
      required:
        - stage_id
        - start_time
        - end_time
        - weapon_list
    RestoreWave:
      type: object
      properties:
        event_type:
          type: number
        water_level:
          type: number
        golden_ikura_num:
          type: number
        golden_ikura_pop_num:
          type: number
        quota_num:
          type: number
        ikura_num:
          type: number
      required:
        - event_type
        - water_level
        - golden_ikura_num
        - golden_ikura_pop_num
        - quota_num
        - ikura_num
    RestoreResult:
      type: object
      properties:
        boss_counts:
          type: array
          items:
            type: string
        boss_kill_counts:
          type: array
          items:
            type: string
        no_night_waves:
          type: boolean
        danger_rate:
          type: number
        golden_ikura_num:
          type: number
        ikura_num:
          type: number
        play_time:
          format: date-time
          type: string
        start_time:
          format: date-time
          type: string
        end_time:
          format: date-time
          type: string
        members:
          type: array
          items:
            type: string
        job_result:
          $ref: '#/components/schemas/JobResult'
        players:
          type: array
          items:
            $ref: '#/components/schemas/RestorePlayer'
        schedule:
          $ref: '#/components/schemas/RestoreSchedule'
        waves:
          type: array
          items:
            $ref: '#/components/schemas/RestoreWave'
      required:
        - boss_counts
        - boss_kill_counts
        - no_night_waves
        - danger_rate
        - golden_ikura_num
        - ikura_num
        - play_time
        - start_time
        - end_time
        - members
        - job_result
        - players
        - schedule
        - waves
    RestoreResults:
      type: object
      properties:
        results:
          minItems: 1
          maxItems: 200
          type: array
          items:
            $ref: '#/components/schemas/RestoreResult'
      required:
        - results
    PaginatedDto:
      type: object
      properties:
        total:
          type: integer
          description: 総数
        limit:
          type: integer
          description: 取得数
        offset:
          type: integer
          description: オフセット
      required:
        - total
        - limit
        - offset
    EnumType:
      type: object
      properties:
        key:
          type: string
        name:
          type: string
      required:
        - key
        - name
    BossCount:
      type: object
      properties:
        boss:
          $ref: '#/components/schemas/EnumType'
        count:
          type: number
      required:
        - boss
        - count
    BossCounts:
      type: object
      properties:
        '3':
          $ref: '#/components/schemas/BossCount'
        '6':
          $ref: '#/components/schemas/BossCount'
        '9':
          $ref: '#/components/schemas/BossCount'
        '12':
          $ref: '#/components/schemas/BossCount'
        '13':
          $ref: '#/components/schemas/BossCount'
        '14':
          $ref: '#/components/schemas/BossCount'
        '15':
          $ref: '#/components/schemas/BossCount'
        '16':
          $ref: '#/components/schemas/BossCount'
        '21':
          $ref: '#/components/schemas/BossCount'
      required:
        - '3'
        - '6'
        - '9'
        - '12'
        - '13'
        - '14'
        - '15'
        - '16'
        - '21'
    Grade:
      type: object
      properties:
        id:
          type: number
        long_name:
          type: string
        short_name:
          type: string
      required:
        - id
        - long_name
        - short_name
    PlayerType:
      type: object
      properties:
        style:
          type: string
          enum:
            - girl
            - boy
        species:
          type: string
          enum:
            - inklings
            - octolings
      required:
        - style
        - species
    Special:
      type: object
      properties:
        id:
          type: number
        image_a:
          type: string
        image_b:
          type: string
      required:
        - id
        - image_a
        - image_b
    Weapon:
      type: object
      properties:
        id:
          type: number
      required:
        - id
    WeaponList:
      type: object
      properties:
        id:
          type: number
        weapon:
          $ref: '#/components/schemas/Weapon'
      required:
        - id
        - weapon
    PlayerResult:
      type: object
      properties:
        boss_kill_counts:
          $ref: '#/components/schemas/BossCounts'
        dead_count:
          type: number
        golden_ikura_num:
          type: number
        help_count:
          type: number
        ikura_num:
          type: number
        name:
          type: string
        pid:
          type: string
        player_type:
          $ref: '#/components/schemas/PlayerType'
        special:
          $ref: '#/components/schemas/Special'
        weapon_list:
          type: array
          items:
            $ref: '#/components/schemas/WeaponList'
        special_counts:
          type: array
          items:
            type: string
      required:
        - boss_kill_counts
        - dead_count
        - golden_ikura_num
        - help_count
        - ikura_num
        - name
        - pid
        - player_type
        - special
        - weapon_list
        - special_counts
    EnumImageType:
      type: object
      properties:
        image:
          type: object
        name:
          type: string
      required:
        - image
        - name
    Schedule:
      type: object
      properties:
        start_time:
          format: date-time
          type: string
        end_time:
          format: date-time
          type: string
        stage:
          $ref: '#/components/schemas/EnumImageType'
        weapons:
          type: array
          items:
            type: string
      required:
        - start_time
        - end_time
        - stage
        - weapons
    WaveResult:
      type: object
      properties:
        water_level:
          $ref: '#/components/schemas/EnumType'
        event_type:
          $ref: '#/components/schemas/EnumType'
        golden_ikura_num:
          type: number
        golden_ikura_pop_num:
          type: number
        ikura_num:
          type: number
        quota_num:
          type: number
      required:
        - water_level
        - event_type
        - golden_ikura_num
        - golden_ikura_pop_num
        - ikura_num
        - quota_num
    UploadResult:
      type: object
      properties:
        boss_counts:
          $ref: '#/components/schemas/BossCounts'
        danger_rate:
          type: number
        end_time:
          format: date-time
          type: string
        grade:
          $ref: '#/components/schemas/Grade'
        grade_point:
          type: number
        grade_point_delta:
          type: number
        job_id:
          type: number
        job_rate:
          type: number
        job_result:
          $ref: '#/components/schemas/JobResult'
        job_score:
          type: number
        kuma_point:
          type: number
        my_result:
          $ref: '#/components/schemas/PlayerResult'
        other_results:
          type: array
          items:
            $ref: '#/components/schemas/PlayerResult'
        play_time:
          format: date-time
          type: string
        player_type:
          $ref: '#/components/schemas/PlayerType'
        schedule:
          $ref: '#/components/schemas/Schedule'
        start_time:
          format: date-time
          type: string
        wave_details:
          type: array
          items:
            $ref: '#/components/schemas/WaveResult'
      required:
        - boss_counts
        - danger_rate
        - end_time
        - grade
        - grade_point
        - grade_point_delta
        - job_id
        - job_rate
        - job_result
        - job_score
        - kuma_point
        - my_result
        - other_results
        - play_time
        - player_type
        - schedule
        - start_time
        - wave_details
    UploadResults:
      type: object
      properties:
        results:
          minItems: 1
          maxItems: 50
          type: array
          items:
            $ref: '#/components/schemas/UploadResult'
      required:
        - results
    RankResult:
      type: object
      properties:
        salmon_id:
          type: number
          description: リザルトID
        rank:
          type: number
          description: ランク
        golden_ikura_num:
          type: number
          description: 金イクラ数
        ikura_num:
          type: number
          description: 赤イクラ数
        members:
          example:
            - '0000000000000000'
            - '1111111111111111'
            - '2222222222222222'
            - '3333333333333333'
          description: チームメンバー(ソート済み)
          type: array
          items:
            type: string
      required:
        - rank
        - golden_ikura_num
        - ikura_num
    RankIkura:
      type: object
      properties:
        golden_ikura_num:
          description: 金イクラランキング
          allOf:
            - $ref: '#/components/schemas/RankResult'
        ikura_num:
          description: 赤イクラランキング
          allOf:
            - $ref: '#/components/schemas/RankResult'
        count:
          type: number
          description: 回数
      required:
        - golden_ikura_num
        - ikura_num
    RankTotal:
      type: object
      properties:
        all:
          description: 夜イベントを含む
          allOf:
            - $ref: '#/components/schemas/RankIkura'
        no_night_waves:
          description: 夜イベントを含まない
          allOf:
            - $ref: '#/components/schemas/RankIkura'
      required:
        - all
        - no_night_waves
    RankWaveEventHigh:
      type: object
      properties:
        water-levels:
          $ref: '#/components/schemas/RankResult'
        rush:
          $ref: '#/components/schemas/RankResult'
        goldie-seeking:
          $ref: '#/components/schemas/RankResult'
        griller:
          $ref: '#/components/schemas/RankResult'
        the-mothership:
          $ref: '#/components/schemas/RankResult'
        fog:
          $ref: '#/components/schemas/RankResult'
      required:
        - water-levels
        - rush
        - goldie-seeking
        - griller
        - the-mothership
        - fog
    RankWaveEventNormal:
      type: object
      properties:
        water-levels:
          $ref: '#/components/schemas/RankResult'
        rush:
          $ref: '#/components/schemas/RankResult'
        goldie-seeking:
          $ref: '#/components/schemas/RankResult'
        griller:
          $ref: '#/components/schemas/RankResult'
        the-mothership:
          $ref: '#/components/schemas/RankResult'
        fog:
          $ref: '#/components/schemas/RankResult'
      required:
        - water-levels
        - rush
        - goldie-seeking
        - griller
        - the-mothership
        - fog
    RankWaveEventLow:
      type: object
      properties:
        water-levels:
          $ref: '#/components/schemas/RankResult'
        the-mothership:
          $ref: '#/components/schemas/RankResult'
        fog:
          $ref: '#/components/schemas/RankResult'
        cohock-charge:
          $ref: '#/components/schemas/RankResult'
      required:
        - water-levels
        - the-mothership
        - fog
        - cohock-charge
    RankWave:
      type: object
      properties:
        high:
          $ref: '#/components/schemas/RankWaveEventHigh'
        normal:
          $ref: '#/components/schemas/RankWaveEventNormal'
        low:
          $ref: '#/components/schemas/RankWaveEventLow'
      required:
        - high
        - normal
        - low
    Rank:
      type: object
      properties:
        total:
          description: 総合記録ランク
          allOf:
            - $ref: '#/components/schemas/RankTotal'
        waves:
          description: WAVE記録ランク
          allOf:
            - $ref: '#/components/schemas/RankWave'
      required:
        - total
        - waves
