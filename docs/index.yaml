openapi: 3.0.0
paths:
  /users:
    post:
      operationId: 作成
      summary: ''
      parameters:
        - name: uid
          required: true
          in: query
          schema:
            type: string
      responses:
        '201':
          description: ''
      tags:
        - ユーザー
    get:
      operationId: 一覧取得
      summary: ''
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: PaginatedResponseOfMetadata
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/Metadata'
      tags:
        - ユーザー
  /users/{nsaid}:
    get:
      operationId: 取得
      summary: ''
      parameters:
        - name: nsaid
          required: true
          in: path
          description: アカウントID
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metadata'
      tags:
        - ユーザー
    put:
      operationId: 更新
      summary: ''
      parameters:
        - name: nsaid
          required: true
          in: path
          description: ユーザーID
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metadata'
      tags:
        - ユーザー
    delete:
      operationId: 削除
      summary: ''
      parameters:
        - name: nsaid
          required: true
          in: path
          description: ユーザーID
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metadata'
      tags:
        - ユーザー
  /results/{salmon_id}:
    get:
      operationId: 取得
      summary: ''
      parameters:
        - name: salmon_id
          required: true
          in: path
          description: リザルトID
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - リザルト
    put:
      operationId: 更新
      summary: ''
      parameters:
        - name: salmon_id
          required: true
          in: path
          description: リザルトID
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - リザルト
    delete:
      operationId: 削除
      summary: ''
      parameters:
        - name: salmon_id
          required: true
          in: path
          description: リザルトID
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - リザルト
  /results:
    get:
      operationId: 一括取得
      summary: ''
      parameters:
        - name: offset
          required: true
          in: query
          schema:
            minimum: 0
            title: ''
            default: 0
            type: number
        - name: limit
          required: true
          in: query
          schema:
            minimum: 0
            maximum: 200
            title: limit
            default: 25
            type: number
        - name: is_only_clear
          required: true
          in: query
          description: クリアしたリザルトのみ
          schema:
            title: ''
            default: false
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: PaginatedResponseOfResponse
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/Response'
      tags:
        - リザルト
    post:
      operationId: 登録
      summary: ''
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResultRequestBody'
      responses:
        '201':
          description: ''
      tags:
        - リザルト
  /results/schedules/{schedule_id}:
    get:
      operationId: スケジュール指定
      summary: ''
      parameters:
        - name: offset
          required: true
          in: query
          schema:
            minimum: 0
            title: ''
            default: 0
            type: number
        - name: limit
          required: true
          in: query
          schema:
            minimum: 0
            maximum: 200
            title: limit
            default: 25
            type: number
        - name: is_only_clear
          required: true
          in: query
          description: クリアしたリザルトのみ
          schema:
            title: ''
            default: false
            type: boolean
        - name: schedule_id
          required: true
          in: path
          description: シフトID
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: PaginatedResponseOfResponse
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/Response'
      tags:
        - リザルト一覧
  /results/users/{nsaid}:
    get:
      operationId: プレイヤー指定
      summary: ''
      parameters:
        - name: offset
          required: true
          in: query
          schema:
            minimum: 0
            title: ''
            default: 0
            type: number
        - name: limit
          required: true
          in: query
          schema:
            minimum: 0
            maximum: 200
            title: limit
            default: 25
            type: number
        - name: is_only_clear
          required: true
          in: query
          description: クリアしたリザルトのみ
          schema:
            title: ''
            default: false
            type: boolean
        - name: nsaid
          required: true
          in: path
          description: プレイヤーID
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: PaginatedResponseOfResponse
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/Response'
      tags:
        - リザルト一覧
  /ranking/schedules/{schedule_id}:
    get:
      operationId: 取得
      summary: ''
      parameters:
        - name: schedule_id
          required: true
          in: path
          description: シフトID
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Waves'
      tags:
        - ランキング
  /schedules/{schedule_id}/stats:
    get:
      operationId: 統計取得
      summary: ''
      parameters:
        - name: schedule_id
          required: true
          in: path
          description: シフトID
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stats'
      tags:
        - スケジュール
  /schedules:
    get:
      operationId: 取得
      summary: ''
      parameters:
        - name: offset
          required: true
          in: query
          schema:
            minimum: 0
            title: ''
            default: 0
            type: number
        - name: limit
          required: true
          in: query
          schema:
            minimum: 0
            maximum: 200
            title: limit
            default: 25
            type: number
        - name: stage_id
          required: false
          in: query
          description: ステージID
          schema:
            minimum: 5000
            maximum: 5005
            nullable: true
            default: null
            type: integer
        - name: rare_weapon
          required: false
          in: query
          description: 支給レアブキ
          schema:
            nullable: true
            default: null
            type: number
        - name: supplied_weapon
          required: false
          in: query
          description: 支給ブキ
          schema:
            maximum: 4
            type: array
            items:
              type: number
        - name: start_time
          required: false
          in: query
          description: 開始時刻
          schema:
            nullable: true
            default: null
            type: datetime
        - name: end_time
          required: false
          in: query
          description: 終了時刻
          schema:
            nullable: true
            default: null
            type: datetime
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: PaginatedResponseOfScheduleMetadata
                allOf:
                  - $ref: '#/components/schemas/PaginatedDto'
                  - properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/ScheduleMetadata'
      tags:
        - スケジュール
    post:
      operationId: 追加
      summary: ''
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - スケジュール
info:
  title: Salmon Stats API Documents
  description: ''
  version: 1.0.0
  contact: {}
tags: []
servers: []
components:
  schemas:
    Metadata:
      type: object
      properties:
        id:
          type: number
        nsaid:
          type: string
        username:
          type: string
        thumbnail_url:
          type: string
      required:
        - id
        - nsaid
        - username
        - thumbnail_url
    PaginatedDto:
      type: object
      properties:
        total:
          type: integer
          description: 総数
        limit:
          type: integer
          description: 取得数
        offset:
          type: integer
          description: オフセット
      required:
        - total
        - limit
        - offset
    Schedule:
      type: object
      properties:
        stage_id:
          type: integer
          description: ステージID
        start_time:
          type: integer
          description: シフト開始時間
        end_time:
          type: integer
          description: シフト終了時間
        weapon_lists:
          type: integer
          description: 支給ブキ
      required:
        - stage_id
        - start_time
        - end_time
        - weapon_lists
    JobResult:
      type: object
      properties:
        failure_reason:
          type: string
          enum:
            - time_limit
            - wipe_out
          nullable: true
          description: 失敗理由
          example: null
        failure_wave:
          type: integer
          nullable: true
          description: 失敗WAVE
          example: null
        is_clear:
          type: boolean
          description: クリアしたか
          example: true
      required:
        - failure_reason
        - failure_wave
        - is_clear
    Player:
      type: object
      properties:
        nsaid:
          type: string
          description: プレイヤーID
        job_id:
          type: integer
          nullable: true
          description: バイトID
        grade_point:
          type: integer
          nullable: true
          description: 評価レート
        grade_point_delta:
          type: integer
          nullable: true
          description: 評価レート変動値
        job_rate:
          type: integer
          nullable: true
          description: ジョブレート
        job_score:
          type: integer
          nullable: true
          description: バイトスコア
        kuma_point:
          type: integer
          nullable: true
          description: クマサンポイント
        golden_ikura_num:
          type: integer
          description: 金イクラ納品数
        ikura_num:
          type: integer
          description: 赤イクラ獲得数
        help_counts:
          type: integer
          description: 救助数
        dead_counts:
          type: integer
          description: 被救助数
        boss_kill_counts:
          description: オオモノ討伐数
          default:
            - 0
            - 0
            - 0
            - 0
            - 0
            - 0
            - 0
            - 0
            - 0
          type: array
          items:
            type: number
        weapon_lists:
          description: 支給ブキ
          type: array
          items:
            type: number
        special_id:
          type: integer
          description: スペシャルID
        special_counts:
          description: スペシャル使用回数
          default:
            - 0
            - 0
            - 0
          type: array
          items:
            type: number
      required:
        - nsaid
        - job_id
        - grade_point
        - grade_point_delta
        - job_rate
        - job_score
        - kuma_point
        - golden_ikura_num
        - ikura_num
        - help_counts
        - dead_counts
        - boss_kill_counts
        - weapon_lists
        - special_id
        - special_counts
    Response:
      type: object
      properties:
        salmon_id:
          type: integer
          description: ID
        boss_counts:
          description: オオモノ出現数
          default:
            - 0
            - 0
            - 0
            - 0
            - 0
            - 0
            - 0
            - 0
            - 0
          type: array
          items:
            type: number
        boss_kill_counts:
          description: オオモノ討伐数
          default:
            - 0
            - 0
            - 0
            - 0
            - 0
            - 0
            - 0
            - 0
            - 0
          type: array
          items:
            type: number
        danger_rate:
          type: number
          description: キケン度
        start_time:
          type: integer
          description: シフト開始時間
        end_time:
          type: integer
          description: シフト終了時間
        play_time:
          type: integer
          description: プレイ時間
        schedule:
          description: シフト
          allOf:
            - $ref: '#/components/schemas/Schedule'
        job_results:
          description: リザルト
          allOf:
            - $ref: '#/components/schemas/JobResult'
        player_results:
          description: プレイヤー記録
          type: array
          items:
            $ref: '#/components/schemas/Player'
      required:
        - salmon_id
        - boss_counts
        - boss_kill_counts
        - danger_rate
        - start_time
        - end_time
        - play_time
        - schedule
        - job_results
        - player_results
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
        error_description:
          type: string
      required:
        - error
        - error_description
    BossKey:
      type: object
      properties:
        key:
          type: string
          enum:
            - sakelien-golden
            - sakelien-bomber
            - sakelien-cup-twins
            - sakelien-shield
            - sakelien-snake
            - sakelien-tower
            - sakediver
            - sakedozer
            - sakerocket
        name:
          type: string
      required:
        - key
    BossCount:
      type: object
      properties:
        boss:
          $ref: '#/components/schemas/BossKey'
        count:
          type: integer
      required:
        - boss
        - count
    BossCounts:
      type: object
      properties:
        '3':
          $ref: '#/components/schemas/BossCount'
        '6':
          $ref: '#/components/schemas/BossCount'
        '9':
          $ref: '#/components/schemas/BossCount'
        '12':
          $ref: '#/components/schemas/BossCount'
        '13':
          $ref: '#/components/schemas/BossCount'
        '14':
          $ref: '#/components/schemas/BossCount'
        '15':
          $ref: '#/components/schemas/BossCount'
        '16':
          $ref: '#/components/schemas/BossCount'
        '21':
          $ref: '#/components/schemas/BossCount'
      required:
        - '3'
        - '6'
        - '9'
        - '12'
        - '13'
        - '14'
        - '15'
        - '16'
        - '21'
    GradeRequest:
      type: object
      properties:
        id:
          type: string
          example: '5'
        long_name:
          type: string
        name:
          type: string
        short_name:
          type: string
      required:
        - id
    PlayerTypeRequest:
      type: object
      properties:
        species:
          type: string
          enum:
            - inkling
            - octoling
          example: inkling
        style:
          type: string
          enum:
            - girl
            - boy
          example: girl
      required:
        - species
        - style
    SpecialRequest:
      type: object
      properties:
        id:
          type: string
          example: '2'
        image_a:
          type: string
        image_b:
          type: string
        name:
          type: string
      required:
        - id
        - image_a
        - image_b
        - name
    Weapon:
      type: object
      properties:
        id:
          type: string
          example: '20000'
        image:
          type: string
        name:
          type: string
        thumbnail:
          type: string
      required:
        - id
        - image
        - name
        - thumbnail
    WeaponRequest:
      type: object
      properties:
        id:
          type: string
          example: '20000'
        weapon:
          $ref: '#/components/schemas/Weapon'
      required:
        - id
        - weapon
    PlayerRequest:
      type: object
      properties:
        boss_kill_counts:
          $ref: '#/components/schemas/BossCounts'
        dead_count:
          type: integer
        golden_ikura_num:
          type: integer
        help_count:
          type: integer
        ikura_num:
          type: integer
        name:
          type: string
          example: tkgstrator
        pid:
          type: string
          example: ffffffffffffffff
        player_type:
          $ref: '#/components/schemas/PlayerTypeRequest'
        special:
          $ref: '#/components/schemas/SpecialRequest'
        special_counts:
          type: array
          items:
            type: number
        weapon_lists:
          type: array
          items:
            $ref: '#/components/schemas/WeaponRequest'
      required:
        - boss_kill_counts
        - dead_count
        - golden_ikura_num
        - help_count
        - ikura_num
        - name
        - pid
        - player_type
        - special
        - special_counts
        - weapon_lists
    EventTypeRequest:
      type: object
      properties:
        key:
          type: string
          enum:
            - water-levels
            - rush
            - goldie-seeking
            - griller
            - the-mothership
            - fog
            - cohock-charge
          example: water-levels
        name:
          type: string
      required:
        - key
    WaterLevelRequest:
      type: object
      properties:
        key:
          type: string
          enum:
            - low
            - normal
            - high
          example: normal
        name:
          type: string
      required:
        - key
    WaveRequest:
      type: object
      properties:
        event_type:
          $ref: '#/components/schemas/EventTypeRequest'
        golden_ikura_num:
          type: integer
        golden_ikura_pop_num:
          type: integer
          example: 100
        ikura_num:
          type: integer
          example: 2000
        quota_num:
          type: integer
          example: 25
        water_level:
          $ref: '#/components/schemas/WaterLevelRequest'
      required:
        - event_type
        - golden_ikura_num
        - golden_ikura_pop_num
        - ikura_num
        - quota_num
        - water_level
    ResultRequest:
      type: object
      properties:
        boss_counts:
          $ref: '#/components/schemas/BossCounts'
        grade:
          $ref: '#/components/schemas/GradeRequest'
        danger_rate:
          type: float
          example: 200
        end_time:
          type: integer
        grade_point:
          type: integer
          example: 999
        grade_point_delta:
          type: integer
          example: 0
        job_id:
          type: integer
          example: 0
        job_rate:
          type: integer
          example: 435
        job_result:
          $ref: '#/components/schemas/JobResult'
        job_score:
          type: integer
          example: 1000
        kuma_point:
          type: integer
          example: 1000
        my_result:
          $ref: '#/components/schemas/PlayerRequest'
        other_results:
          type: array
          items:
            $ref: '#/components/schemas/PlayerRequest'
        play_time:
          type: integer
        start_time:
          type: integer
        wave_details:
          type: array
          items:
            $ref: '#/components/schemas/WaveRequest'
      required:
        - boss_counts
        - grade
        - danger_rate
        - end_time
        - job_result
        - my_result
        - other_results
        - play_time
        - start_time
        - wave_details
    ResultRequestBody:
      type: object
      properties:
        results:
          title: SplatNet2
          minItems: 0
          maxItems: 50
          type: array
          items:
            $ref: '#/components/schemas/ResultRequest'
      required:
        - results
    Waves:
      type: object
      properties:
        salmon_id:
          type: integer
          description: ID
        event_type:
          type: string
          enum:
            - water-levels
            - rush
            - goldie-seeking
            - griller
            - the-mothership
            - fog
            - cohock-charge
          description: イベント
        water_level:
          type: string
          enum:
            - low
            - normal
            - high
          description: 潮位
        golden_ikura_num:
          type: integer
          description: 金イクラ納品数
        golden_ikura_pop_num:
          type: integer
          description: 金イクラ出現数
        ikura_num:
          type: integer
          description: 赤イクラ獲得数
        quota_num:
          type: integer
          description: ノルマ
      required:
        - salmon_id
        - event_type
        - water_level
        - golden_ikura_num
        - golden_ikura_pop_num
        - ikura_num
        - quota_num
    ScheduleMetadata:
      type: object
      properties:
        start_time:
          type: integer
        end_time:
          type: integer
        rare_weapon:
          type: integer
          nullable: true
        stage_id:
          type: integer
          example: 5000
        weapon_lists:
          examples:
            - -2
            - -2
            - -2
            - -2
          type: array
          items:
            type: number
      required:
        - start_time
        - end_time
        - rare_weapon
        - stage_id
        - weapon_lists
    Job:
      type: object
      properties:
        clear:
          type: integer
          description: クリア回数
        failure:
          type: integer
          description: 失敗回数
      required:
        - clear
        - failure
    Result:
      type: object
      properties:
        job_result:
          description: バイト結果
          allOf:
            - $ref: '#/components/schemas/Job'
        boss_counts:
          description: オオモノ出現数
          type: array
          items:
            type: number
        boss_kill_counts:
          description: オオモノ討伐数
          type: array
          items:
            type: number
        help_counts:
          type: integer
          description: 救助数合計
        dead_counts:
          type: integer
          description: 被救助数合計
      required:
        - job_result
        - boss_counts
        - boss_kill_counts
        - help_counts
        - dead_counts
    Stats:
      type: object
      properties:
        schedule:
          $ref: '#/components/schemas/ScheduleMetadata'
        my_result:
          description: 統計
          allOf:
            - $ref: '#/components/schemas/Result'
        other_results:
          description: 全国統計
          allOf:
            - $ref: '#/components/schemas/Result'
      required:
        - schedule
        - my_result
        - other_results
